#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <locale.h>
#include <string.h>
#include <windows.h>
#include <time.h>

// обновление 
void setcur(int x, int y) {
    COORD coord;
    coord.X = x;
    coord.Y = y;
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
}
// экран конца игры
void GameOver(int score)
{
    int odin = 0; 
    int n; // переменная для score
    char key;
    char game_over[13][21];
    do
    {
        if (score < 50) {
            sprintf(game_over[0], "###################");
            sprintf(game_over[1], "#    *THE DOG*    #");
            sprintf(game_over[2], "#                 #");
            sprintf(game_over[3], "#    GAME OVER    #");
            sprintf(game_over[4], "#    YOUR SCORE   #");
            sprintf(game_over[5], "#        %d        #", score);
            //if (score <= 9) {
            sprintf(game_over[6], "#                 #");
            sprintf(game_over[7], "#  (E - to menu)  #");
            sprintf(game_over[8], "###################");
            n = 9;
            //}
            /*else {
                sprintf(game_over[6], "#                 #");
                sprintf(game_over[7], "#   CODE-REWARD:  #");
                sprintf(game_over[8], "#      BEGIN      #");
                sprintf(game_over[9], "#                 #");
                sprintf(game_over[10], "#   (E - exit)    #");
                sprintf(game_over[11], "###################");
                n = 12;
            }*/
        }
        if (score == 50) {
            sprintf(game_over[0], "###################");
            sprintf(game_over[1], "#    *THE DOG*    #");
            sprintf(game_over[2], "#                 #");
            sprintf(game_over[3], "# CONGRATULATION! #");
            sprintf(game_over[4], "#     YOU WIN     #");
            sprintf(game_over[5], "# YOUR SCORE - 50 #");
            sprintf(game_over[6], "#                 #");
            sprintf(game_over[7], "#                 #");
            sprintf(game_over[8], "#  CODE-REWARD:   #");
            sprintf(game_over[9], "#      BEGIN      #");
            sprintf(game_over[10], "#                 #");
            sprintf(game_over[11], "#  (E - to menu)  #");
            sprintf(game_over[12], "###################");
            n = 13;
            
        }

        if (odin == 0) {
            system("cls");
            odin++;
        }
        setcur(0, 0); 
        if (score < 50)
            if (score >= 10) sprintf(game_over[5], "#        %d       #", score);
        //if (score >= 100) sprintf(game_over[5], "#       %d       #", score);
        printf("\n");
        for (int i = 0; i < n; i++)
            printf("\t\t\t\t\t\t%s\n", game_over[i]);

        key = _getch();

    } while (GetKeyState('E') >= 0);
    system("cls");
    main();

}
// экран награды 
void Reward() {
    int odin = 0; 
    int i;
    int cmpo;
    char key;
    char reward[14][36];
    char code_reward[6] = "";
    char code[6] = "BEGIN";
    system("cls");
M1: printf("\n Введи код: ");
    fgets(code_reward, sizeof(code_reward), stdin);
    cmpo = strcmp(code, code_reward);

    if (cmpo == 0)
    {
        do
        {
            sprintf(reward[0], "        ,     \\    /      ,        ");
            sprintf(reward[1], "       / \\    )\\__/(     / \\       ");
            sprintf(reward[2], "      /   \\  (_\\  /_)   /   \\      ");
            sprintf(reward[3], " ____/_____\\__\\@  @/___/_____\\____ ");
            sprintf(reward[4], "|             |\\../|              |");
            sprintf(reward[5], "|              \\VV/               |");
            sprintf(reward[6], "|             cinema?             |");
            sprintf(reward[7], "|_________________________________|");
            sprintf(reward[8], " |    /\\ /      \\\\       \\ /\\    | ");
            sprintf(reward[9], " |  /   V        ))       V   \\  | ");
            sprintf(reward[10], " |/     `       //        '     \\| ");
            sprintf(reward[11], " `              V                '");
            sprintf(reward[12], "                                  ");
            sprintf(reward[13], "          (E - to menu)           ");


            if (odin == 0) {
                system("cls");
                odin++;
            }
            setcur(0, 0); 
            printf("\n");
            for (i = 0; i < 14; i++)
                
                printf("\t\t\t\t\t%s\n", reward[i]);

            key = _getch();

        } while (GetKeyState('E') >= 0);
    }
    else
    {
        printf(" Неверный код! \n");
        printf(" Нажми Y если хочешь повторить, N если выйти в меню: \n");
        key = _getch();
        if (GetKeyState('Y') < 0) goto M1;
        else if (GetKeyState('N') < 0) goto M2;
    }
M2: odin = 0;
    if (odin == 0) {
        system("cls");
        odin++;
    }
    setcur(0, 0); 
}
// экран игры
int GameMain() {
    //setcur(0, 0);
    setlocale(LC_CTYPE, "rus");
    srand(time(NULL));
    char field[12][22];
    int tail[100][2];
    int length = 1;
    tail[0][0] = 6;
    tail[0][1] = 10;
    int apple_x = 2, apple_y = 5;
    char key;
    int sc = 0;
    int n = 1;
    int perem = 1;
    do {
        if (n == 1) {
            system("cls");
            n = 2;
        }
        setcur(0, 0); 
        // карты
        if (sc < 5) {
            sprintf(field[0], "                     ");
            sprintf(field[1], "#####################");
            sprintf(field[2], "#                   #");
            sprintf(field[3], "#                   #");
            sprintf(field[4], "#                   #");
            sprintf(field[5], "#                   #");
            sprintf(field[6], "#                   #");
            sprintf(field[7], "#                   #");
            sprintf(field[8], "#                   #");
            sprintf(field[9], "#                   #");
            sprintf(field[10], "#                   #");
            sprintf(field[11], "#####################");
        }
        
        if (sc >= 5 && sc < 10) {
            if (perem == 1) {
               
                system("cls");
                printf("\n\n\n\n\n\n\n\n\n\n\n\n\n \t\t\t\t\t\t     LEVEL - 2");
                Sleep(1000);
                system("cls");

                tail[0][0] = 6;
                tail[0][1] = 11;
                length = 1;
                apple_x = 5;
                apple_y = 7;
                perem = 2;
            }
            sprintf(field[0], "                     ");
            sprintf(field[1], "#####################");
            sprintf(field[2], "#                   #");
            sprintf(field[3], "#   #       #       #");
            sprintf(field[4], "#   #       #       #");
            sprintf(field[5], "#           # # #   #");
            sprintf(field[6], "#                   #");
            sprintf(field[7], "#        #          #");
            sprintf(field[8], "#      #            #");
            sprintf(field[9], "#                   #");
            sprintf(field[10], "#                   #");
            sprintf(field[11], "#####################");
        }
       
         if (sc >= 10 && sc < 20) {
             if (perem == 2) {
                
                 system("cls");
                 printf("\n\n\n\n\n\n\n\n\n\n\n\n\n \t\t\t\t\t\t     LEVEL - 3");
                 Sleep(1000);
                 system("cls");
                 
                 tail[0][0] = 6;
                 tail[0][1] = 11;
                 length = 1;
                 apple_x = 9;
                 apple_y = 3;
                 perem = 3;
             }
             
            sprintf(field[0], "                     ");
            sprintf(field[1], "#####################");
            sprintf(field[2], "#                 # #");
            sprintf(field[3], "#   #       #   #   #");
            sprintf(field[4], "#   #       # #     #");
            sprintf(field[5], "#   #       # # #   #");
            sprintf(field[6], "#   #               #");
            sprintf(field[7], "#           #       #");
            sprintf(field[8], "#             #     #");
            sprintf(field[9], "#    ########   #   #");
            sprintf(field[10], "#                #  #");
            sprintf(field[11], "#####################");
            
        }
         if (sc > 19 && sc < 30) {
             if (perem == 3) {
                 system("cls");
                 printf("\n\n\n\n\n\n\n\n\n\n\n\n \t\t\t\t\t\t     LEVEL - 4");
                 Sleep(1000);
                 system("cls");

                 tail[0][0] = 6;
                 tail[0][1] = 10;
                 length = 1;
                 apple_x = 3;
                 apple_y = 5;
                 perem = 4;
             }
             sprintf(field[0], "                     ");
             sprintf(field[1], "#####################");
             sprintf(field[2], "#                   #");
             sprintf(field[3], "#   #    # #    #   #");
             sprintf(field[4], "#     #       #     #");
             sprintf(field[5], "#       #   #       #");
             sprintf(field[6], "#   #####   #####   #");
             sprintf(field[7], "#       #   #       #");
             sprintf(field[8], "#     #       #     #");
             sprintf(field[9], "#   #     #     #   #");
             sprintf(field[10], "#                   #");
             sprintf(field[11], "#####################");
         }
         if (sc >= 30 && sc <= 50) {
            if (perem == 4) {
                     system("cls");
                     printf("\n\n\n\n\n\n\n\n\n\n\n\n \t\t\t\t\t\t     LEVEL - 5");
                     Sleep(1000);
                     system("cls");

                     tail[0][0] = 5;
                     tail[0][1] = 10;
                     length = 1;
                     apple_x = 10;
                     apple_y = 7;
                     perem = 5;
            }
                 sprintf(field[0], "                     ");
                 sprintf(field[1], "#####################");
                 sprintf(field[2], "#       #   #       #");
                 sprintf(field[3], "#     #  # #  #     #");
                 sprintf(field[4], "#   #     #     #   #");
                 sprintf(field[5], "# #               # #");
                 sprintf(field[6], "#   #############   #");
                 sprintf(field[7], "# #               # #");
                 sprintf(field[8], "#   #     #     #   #");
                 sprintf(field[9], "#     #  # #  #     #");
                 sprintf(field[10], "#       #   #       #");
                 sprintf(field[11], "#####################");
         }if (sc >= 30 && sc <= 50) {

             if (apple_y == 2 && apple_x == 9) {
                 apple_y = rand() % 8 + 2;
                 apple_x = rand() % 18 + 1;
                 goto M10;
             }
             else if (apple_y == 2 && apple_x == 10) {
                 apple_y = rand() % 8 + 2;
                 apple_x = rand() % 18 + 1;
                 goto M10;
             }
             else if (apple_y == 2 && apple_x == 11) {
                 apple_y = rand() % 8 + 2;
                 apple_x = rand() % 18 + 1;
                 goto M10;
             }
             else if (apple_y == 3 && apple_x == 10) {
                 apple_y = rand() % 8 + 2;
                 apple_x = rand() % 18 + 1;
                 goto M10;
             }
             else if (apple_y == 10 && apple_x == 9) {
                 apple_y = rand() % 8 + 2;
                 apple_x = rand() % 18 + 1;
                 goto M10;
             }
             else if (apple_y == 10 && apple_x == 10) {
                 apple_y = rand() % 8 + 2;
                 apple_x = rand() % 18 + 1;
                 goto M10;
             }
             else if (apple_y == 10 && apple_x == 11) {
                 apple_y = rand() % 8 + 2;
                 apple_x = rand() % 18 + 1;
                 goto M10;
             }
             else if (apple_y == 9 && apple_x == 10) {
                 apple_y = rand() % 8 + 2;
                 apple_x = rand() % 18 + 1;
                 goto M10;
             }
         }
         // победа
         if (sc == 50) {
             GameOver(sc);
             break;
         }
        
        field[apple_y][apple_x] = '*'; // координаты яблока
        for (int i = 0; i < length; i++) { // координаты собаки + "хвоста"
            if (i == 0)
                field[tail[0][0]][tail[0][1]] = '@';
            else
                field[tail[i][0]][tail[i][1]] = '.';
        }
        printf("\n\t\t\t\t\t\tScore: %d\n", sc);
        printf("\n");
        for (int i = 0; i < 12; i++) {
            printf("\t\t\t\t\t\t%s", field[i]);
            
                
            if (i == 1)
                printf("    Control in game:");
            if (i == 3)
                printf("    W - up");
            if (i == 4)
                printf("    A - left");
            if (i == 5)
                printf("    S - down");
            if (i == 6)
                printf("    D - right");
            printf("\n");
        }
        key = _getch();
        int ox = tail[0][1], oy = tail[0][0];
        if (GetKeyState('W') < 0) {
                tail[0][0]--;
        }
        if (GetKeyState('S') < 0) tail[0][0]++;
        if (GetKeyState('D') < 0) tail[0][1]++;
        if (GetKeyState('A') < 0) tail[0][1]--;
        if (field[tail[0][0]][tail[0][1]] == '#' || field[tail[0][0]][tail[0][1]] == '.') {
            GameOver(sc);
            break;
        }
        else {
            for (int i = 1; i < length; i++) {
                int temp = tail[i][1];
                tail[i][1] = ox;
                ox = temp;

                temp = tail[i][0];
                tail[i][0] = oy;
                oy = temp;
            }
        }

        if (tail[0][0] == apple_y && tail[0][1] == apple_x) {
            while ((tail[0][0] == apple_y && tail[0][1] == apple_x) ) {
                apple_y = rand() % 9 + 2;
                apple_x = rand() % 18 + 1;
                sc++;
            }
            tail[length][0] = oy;
            tail[length][1] = ox;
            length++;
        }
       M10: if ((field[apple_y][apple_x] == '.')||(field[apple_y][apple_x] == '#')) {
                apple_y = rand() % 8 + 2;
                apple_x = rand() % 18 + 1;
                goto M10;
        }
        setcur(0, 0); // обновление
    } while (VK_ESCAPE >= 0); // выход при нажатии клавиши "escape"


   // GameOver(sc);
    //return exit;
}


int main() {
    // прячем курсор консоли
    HANDLE  handle = GetStdHandle(STD_OUTPUT_HANDLE);
    CONSOLE_CURSOR_INFO structCursorInfo;
    GetConsoleCursorInfo(handle, &structCursorInfo);
    structCursorInfo.bVisible = FALSE;
    SetConsoleCursorInfo(handle, &structCursorInfo);

    int odin = 0; // переменная дабы не мигало
    char menu_choice[10][21];
    char info[19][67];
    char key;
    int i;
    int cx = 3, cy = 3, cxx = 16;
    int exit = 1;
    setlocale(LC_ALL, "Russian");
    do
    {


        sprintf(menu_choice[0], "###################");
        sprintf(menu_choice[1], "#    *THE DOG*    #");
        sprintf(menu_choice[2], "#                 #");
        sprintf(menu_choice[3], "#    |NEW GAME|   #");
        sprintf(menu_choice[4], "#      |INFO|     #");
        sprintf(menu_choice[5], "#   |GAME CODES|  #");
        sprintf(menu_choice[6], "#      |EXIT|     #");
        sprintf(menu_choice[7], "#                 #");
        sprintf(menu_choice[8], "#                 #");
        sprintf(menu_choice[9], "###################");

        menu_choice[cy][cx] = '>'; // Курсор
        menu_choice[cy][cxx] = '<';

        if (odin == 0) {
            system("cls");
            odin++;
        }
        setcur(0, 0); 
        printf("\n\n\n\n");
        for (i = 0; i < 10; i++) {
            printf("\t\t\t\t\t\t%s", menu_choice[i]);
            if (i == 1)
                printf("    Control in menu:");
            if (i == 3)
                printf("    W - up");
            if (i == 4)
                printf("    S - down");
            if (i == 6)
                printf("    E - enter");
            printf("\n");
        }
        key = _getch();



        if (GetKeyState('S') < 0) cy++;
        if (GetKeyState('W') < 0) cy--;

        if (cy > 6) cy = 3;
        if (cy < 3) cy = 6;


        if ((cy == 3) && (GetKeyState('E') < 0))
        {
            GameMain();
            exit = 3;

        }

        if ((cy == 5) && (GetKeyState('E') < 0))
        {
            Reward();
        }
        if ((cy == 4) && (GetKeyState('E') < 0))
        {
            do
            {


                sprintf(info[0], "##################################################################");
                sprintf(info[1], "#      _____  _   _  _____         ____    _____   _______       #");
                sprintf(info[2], "#     |_   _|| | | ||  ___|       |  _ \\  |  _  | |  _____|      #");
                sprintf(info[3], "#       | |  | |_| || |___        | | | \\ | | | | | |  ___       #");
                sprintf(info[4], "#       | |  |  _  ||  ___|       | | | | | | | | | | |_  |      #");
                sprintf(info[5], "#       | |  | | | || |____       | |_| / | \\_/ | | \\___| |      #");
                sprintf(info[6], "#       \\_/  \\_| |_/\\_____/       \\____/  \\_____/ \\_______|      #");
                sprintf(info[7], "#                                                                #");
                sprintf(info[8], "#                                                                #");
                sprintf(info[9], "#                                                                #");
                sprintf(info[10], "# The Dog - эта игра в которой, твой персонаж (@) собирает       #");
                sprintf(info[11], "# яблоки (*) за которые ты получаешь очки, а так же увеличиваешь #");
                sprintf(info[12], "# хвост (.). Если ты коснёшься своего хвоста или стены игра      #");
                sprintf(info[13], "# закончится. Твоя задача насобирать нужное (50) количество      #");
                sprintf(info[14], "# яблок и тогда станет доступен код, для ввода в \"Game Codes\".   #");
                sprintf(info[15], "#                                                                #");
                sprintf(info[16], "#                        ******************                      #");
                sprintf(info[17], "# v. 0.0.1             (для выхода нажми - E)         by Oika    #");
                sprintf(info[18], "##################################################################");
                
                if (odin == 0) {
                    system("cls");
                    odin++;
                }
                setcur(0, 0); 
                printf("\n");
                for (i = 0; i < 19; i++)
                    printf("\t\t\t    %s\n", info[i]);

                key = _getch();
            } while (GetKeyState('E') >= 0);
            odin = 0;
        }
        if ((cy == 6) && (GetKeyState('E') < 0))
        {
            system("cls");
            //setcur(0, 0); // обновление
            printf("\n GOOD BYE! \n");
            Sleep(2000);
            break;
            exit = 3;
            //return 3;
        }



    } while (exit != 3);

     return 0;
}
